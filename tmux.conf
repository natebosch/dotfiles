set-option -g prefix C-Space
unbind-key C-b
bind-key Space send-prefix
bind-key C-Space kill-session -C

# alternate screen allows fullscreen
# programs (vi,less) to clear after exiting
set-window-option -g alternate-screen on

# Bell
set-option -g bell-action any
set-option -g visual-bell off
set-option -g visual-activity off
set-option -g visual-silence off

# Use VI bindings
set-option -g status-keys vi
set-window-option -g mode-keys vi

set-window-option -g mouse off

# Reload config
bind-key C-r source ~/.tmux.conf

set-option -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Window/Pane management
unbind %
unbind '"'
bind-key | split-window -h
bind-key _ split-window -v
bind-key "'" last-window
bind-key H choose-tree -Z "join-pane -hs '%%'"
bind-key V choose-tree -Z "join-pane -vs '%%'"
bind-key C move-window -r # Renumber windows without gaps
bind-key > run-shell tmux_side_pane
bind-key < select-layout even-horizontal

bind-key m set-window-option monitor-activity
bind-key r command-prompt "rename-window '%%'"
bind-key R command-prompt "rename-session '%%'"
bind-key -r Up resize-pane -U
bind-key -r Down resize-pane -D
bind-key -r Left resize-pane -L
bind-key -r Right resize-pane -R
bind-key X confirm-before -p "kill-window #W? (y/n)" kill-window
set-option -g pane-active-border-style fg=colour166
set-option -g pane-border-style fg=colour21

# Smarter copy into terminal's clipboard
# http://sunaku.github.io/tmux-yank-osc52.html
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'yank > #{pane_tty}'
bind-key y choose-buffer 'run-shell "tmux save-buffer -b \"%%\" - | yank > #{pane_tty}"'
set-option -g wrap-search off

# Sessions
# Fuzzy session and project search
bind-key s new-window "session_finder"
# Jump to previous
bind-key '"' run-shell "tmux switch-client -l || tmux choose-tree -Z -O time \"switch-client -t '%%'\""
# Create new session
bind-key S command-prompt "new-session -s '%%' -A"
# Create or join session editing dotfiles
bind-key D new-window "cd ~/repos/dotfiles; session_finder dotfiles"
# Use sessions '0' as a catch-all
bind-key C-s new-window "session_finder 0"
# Create a session to edit this week's snippets
bind-key L new-window "snippets"
# Pick a recent session when ending this one
set-option -g detach-on-destroy off

# scrollback buffer n lines
set -g history-limit 10000

# on-screen time for display-panes in ms
set -g display-panes-time 2000

# wm window title string (uses statusbar variables)
set -g set-titles on
set -g set-titles-string "#S:#I.#P  #W #T"

# For some reason this messes with evil-mode in emacs?
# https://bitbucket.org/lyro/evil/issues/69/delay-between-esc-or-c-and-modeswitch
set -s escape-time 0

# -----------------------------------
# ----       Status Bar          ----
# -----------------------------------

# Show messages and notifications for 3 seconds.
set-option -g display-time 3000

# Refresh the status bar every 2 seconds.
set-option -g status-interval 2

# The status bar itself.
set-option -g status-left '#{?client_prefix,#[reverse],}#[fg=colour129][#S]'
set-option -g status-left-length 45
# Date, Time, and load on the right of the status
set-option -g status-right '#(tmux_session_bells)#[fg=colour166][#(status-load)#[fg=colour33](#(status-core-count))#[fg=colour166]] #[fg=colour129]%a %Y/%m/%d %H:%M'
set-option -g status-right-length 60

# default statusbar colors
set-option -g status-style fg=white,bg=default

# default window title colors
set-window-option -g window-status-style fg=colour166,bg=default,dim
set-window-option -g window-status-format '#I.#P #W#F'

# active window title colors
set-window-option -g window-status-current-style fg=colour33,bg=default,bright,bold
set-window-option -g window-status-current-format '#I.#P #W#F'

# alerted window colors
set-window-option -g window-status-bell-style fg=colour33,bg=black

# command/message line colors
set-option -g message-style fg=white,bg=black,bright

set-option -g update-environment "DISPLAY WINDOWID SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION SESSION_MANAGER TMUX_SESSION"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|\.?n?vim?x?)(diff)?(-wrapped)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key -n 'C-\' if-shell "$is_vim" 'send-keys C-\\' "select-pane -l"
bind-key [ if-shell "$is_vim" 'send-keys C-w N' "copy-mode"
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key '\' select-pane -l
bind-key C-h send-keys C-h
bind-key C-j send-keys C-j
bind-key C-k send-keys C-k
bind-key C-l send-keys C-l
bind-key 'C-\' send-keys C-\\
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Let vim know when to pick up file changes
set-option -g focus-events on

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

run '~/.tmux/plugins/tpm/tpm'
