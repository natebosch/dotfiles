#!/bin/bash

set -e

VERSION="${1:-latest}"
FLAVOR="${2:-release}"
CHANNEL="${3:-stable}"

if [ "$(uname)" == "Darwin" ]; then
  OS="macos"
else
  OS="linux"
fi

if [ "$(uname -m)" == "arm64" ]; then
  ARCHITECTURE="arm64"
else
  # Normalize because 64 bit X86 architectures can appear as "x86_x64" or "x64".
  ARCHITECTURE="x64"
fi

if [ "$VERSION" == "local" ]; then
  if [ "$OS" == "macos" ]; then
    OUT="xcodebuild"
  else
    OUT="out"
  fi
  LOCAL="$HOME/repos/dart-sdk/sdk/$OUT"
  # Convert to uppercase to match the names of the SDK build directories.
  ARCHITECTURE=$(echo "$ARCHITECTURE" | tr '[:lower:]' '[:upper:]')
  ln -snf "$LOCAL/Release$ARCHITECTURE/dart-sdk" "$HOME/dart-sdk"
  dart --version
  exit
fi

if [ "$VERSION" == "stable" ]; then
  VERSION="latest"
elif [ "$VERSION" == "dev" ]; then
  CHANNEL="dev"
  VERSION="latest"
elif [[ "$VERSION" =~ "dev" ]]; then
  CHANNEL="dev"
fi

DOWNLOAD="https://storage.googleapis.com/dart-archive/channels/$CHANNEL"

if [ "$VERSION" == "latest" ]; then
  VERSION="$(curl -s "$DOWNLOAD/$FLAVOR/latest/VERSION" | jq -r '.version')"
fi

DIRECTORY="$HOME/.dart-sdks/$VERSION"
if [ ! -d "$DIRECTORY" ]; then
  RELEASE="$FLAVOR/$VERSION/sdk/dartsdk-$OS-$ARCHITECTURE-release.zip"
  echo "Downloading $DOWNLOAD/$RELEASE"
  curl "$DOWNLOAD/$RELEASE" -o /tmp/dart-release.zip
  unzip -qo /tmp/dart-release.zip -d "$HOME/.dart-sdks"
  mv "$HOME/.dart-sdks/dart-sdk" "$HOME/.dart-sdks/$VERSION"
fi

ln -snf "$HOME/.dart-sdks/$VERSION" "$HOME/dart-sdk"

echo "Installed dart $VERSION"
